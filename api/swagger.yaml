---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Eat app api"
host: "127.0.0.1:8080"
basePath: "/"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /api/emailActive/{smail}:
    get:
      description: "Email Active"
      operationId: "emailActiveGET"
      parameters:
      - name: "smail"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/emailStatus/{email}:
    get:
      description: "Get status email"
      operationId: "emailStatusGET"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return object data"
          schema:
            type: "object"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/emailAuth:
    put:
      description: "Auth account"
      operationId: "emailAuthPUT"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Authorization"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/createAccount:
    post:
      description: "Add all information or validation"
      operationId: "createAccountPOST"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateNewUser"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/resetPassword/{email}:
    get:
      description: "Reset Password"
      operationId: "resetPasswordGET"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/getUserData/{token}:
    get:
      description: "Get all user data"
      operationId: "userDataGET"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/updateData/{token}:
    put:
      description: "Update user data"
      operationId: "updateUserPUT"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateDate"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "userController"
  /api/createShops/{token}:
    post:
      description: "Create shops"
      operationId: "createShopPOST"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "image"
        in: "formData"
        description: "The file to upload."
        required: false
        type: "file"
      - name: "nameShop"
        in: "formData"
        description: "nameShop"
        required: false
        type: "string"
      - name: "information"
        in: "formData"
        description: "information"
        required: false
        type: "string"
      - name: "category"
        in: "formData"
        description: "category"
        required: false
        type: "string"
      - name: "double"
        in: "formData"
        description: "double"
        required: false
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "shopController"
  /api/updateShops/{token}:
    put:
      description: "Create shops"
      operationId: "updateShopPOST"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "idShop"
        in: "formData"
        required: true
        type: "integer"
      - name: "image"
        in: "formData"
        description: "The file to upload."
        required: false
        type: "file"
      - name: "nameShop"
        in: "formData"
        description: "nameShop"
        required: false
        type: "string"
      - name: "information"
        in: "formData"
        description: "information"
        required: false
        type: "string"
      - name: "category"
        in: "formData"
        description: "category"
        required: false
        type: "string"
      - name: "double"
        in: "formData"
        description: "double"
        required: false
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "shopController"
  /api/getShops/{startId}/{amount}:
    get:
      description: "Get shops"
      operationId: "listShopsGET"
      parameters:
      - name: "startId"
        in: "path"
        required: true
        type: "integer"
      - name: "amount"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "shopController"
  /api/createProduct/{token}:
    post:
      description: "create product"
      operationId: "createProductPOST"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "nameProduct"
        in: "formData"
        description: "nameProduct"
        required: false
        type: "string"
      - name: "information"
        in: "formData"
        description: "information"
        required: false
        type: "string"
      - name: "category"
        in: "formData"
        description: "category"
        required: false
        type: "string"
      - name: "price"
        in: "formData"
        description: "price"
        required: false
        type: "integer"
      - name: "double"
        in: "formData"
        description: "double"
        required: false
        type: "string"
      - name: "store"
        in: "formData"
        description: "store"
        required: false
        type: "integer"
      - name: "image_1"
        in: "formData"
        description: "image_1"
        required: false
        type: "file"
      - name: "image_2"
        in: "formData"
        description: "image_2"
        required: false
        type: "file"
      - name: "image_3"
        in: "formData"
        description: "image_3"
        required: false
        type: "file"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/updateProduct/{token}:
    put:
      description: "Update you product"
      operationId: "updateProductPOST"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "nameProduct"
        in: "formData"
        description: "nameProduct"
        required: false
        type: "string"
      - name: "information"
        in: "formData"
        description: "information"
        required: false
        type: "string"
      - name: "category"
        in: "formData"
        description: "category"
        required: false
        type: "string"
      - name: "price"
        in: "formData"
        description: "price"
        required: false
        type: "integer"
      - name: "double"
        in: "formData"
        description: "double"
        required: true
        type: "string"
      - name: "productID"
        in: "formData"
        description: "productID"
        required: false
        type: "integer"
      - name: "image_1"
        in: "formData"
        description: "image_1"
        required: false
        type: "file"
      - name: "image_2"
        in: "formData"
        description: "image_2"
        required: false
        type: "file"
      - name: "image_3"
        in: "formData"
        description: "image_3"
        required: false
        type: "file"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/getProduct/{startId}/{amount}:
    get:
      description: "Get all user data"
      operationId: "listProductsGET"
      parameters:
      - name: "startId"
        in: "path"
        required: true
        type: "integer"
      - name: "amount"
        in: "path"
        required: true
        type: "integer"
      - name: "word"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/setCommentProduct/{token}:
    post:
      description: "Set product rating"
      operationId: "createCommentPOST"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateComment"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "commentController"
  /api/getRatingProduct/{token}/{product}:
    get:
      description: "Get product rating"
      operationId: "ratingProductGET"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "product"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/setRatingProduct/{token}:
    post:
      description: "Set product rating"
      operationId: "ratingProductPOST"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SetRating"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/getComment/{startId}/{amount}/{product}:
    get:
      description: "Get comment  data"
      operationId: "commentProductGET"
      parameters:
      - name: "startId"
        in: "path"
        required: true
        type: "integer"
      - name: "amount"
        in: "path"
        required: true
        type: "integer"
      - name: "product"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "commentController"
  /api/deleteComment/{token}/{id}:
    delete:
      description: "delete comment data"
      operationId: "commentProductDELETE"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "commentController"
  /api/deleteProduct/{token}/{id}/{double}:
    delete:
      description: "delete product data"
      operationId: "productDELETE"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      - name: "double"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "productController"
  /api/deleteShop/{token}/{id}/{double}:
    delete:
      description: "delete shop data"
      operationId: "shopDELETE"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      - name: "double"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return object data"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "shopController"
  /api/addProductCart/{token}/{product}/{count}:
    get:
      description: "add cart"
      operationId: "addCartPOST"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "product"
        in: "path"
        required: true
        type: "integer"
      - name: "count"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "cartController"
  /api/changeCountCart/{token}/{product}/{count}:
    get:
      description: "change cart"
      operationId: "changeCartPUT"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "product"
        in: "path"
        required: true
        type: "integer"
      - name: "count"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "cartController"
  /api/removeProductCart/{token}:
    delete:
      description: "remove cart"
      operationId: "productCartDELETE"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "product"
        in: "formData"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "cartController"
  /api/getMyCart/{token}/{startId}:
    get:
      description: "get cart"
      operationId: "myCartGet"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "startId"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "cartController"
  /api/getOnlineStatus/{id}:
    get:
      description: "user online"
      operationId: "userOnlineGET"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "сhatController"
  /api/getAllChats/{token}/{startID}:
    get:
      description: "user chats"
      operationId: "allChatsGET"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "startID"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "сhatController"
  /api/getMessageChat/{token}/{startID}/{chatID}:
    get:
      description: "user chats"
      operationId: "messageChatGET"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "startID"
        in: "path"
        required: true
        type: "integer"
      - name: "chatID"
        in: "path"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "сhatController"
  /api/setOnlineStatus/{token}:
    get:
      description: "user online"
      operationId: "setUserOnlineGET"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Status"
        "404":
          description: "Element not found"
      x-swagger-router-controller: "сhatController"
definitions:
  CreateNewUser:
    type: "object"
    properties:
      email:
        type: "string"
        description: "email"
      number:
        type: "string"
        description: "lastname"
      firstname:
        type: "string"
        description: "firstname"
      lastname:
        type: "string"
        description: "lastname"
      password:
        type: "string"
        description: "password"
    example:
      number: "number"
      password: "password"
      firstname: "firstname"
      email: "email"
      lastname: "lastname"
  Authorization:
    type: "object"
    properties:
      email:
        type: "string"
        description: "email"
      password:
        type: "string"
        description: "password"
      device:
        type: "string"
        description: "device"
      platforma:
        type: "string"
        description: "platforma"
      ip:
        type: "string"
        description: "ip"
    example:
      platforma: "platforma"
      password: "password"
      ip: "ip"
      device: "device"
      email: "email"
  UpdateDate:
    type: "object"
    properties:
      number:
        type: "string"
        description: "number"
      firstname:
        type: "string"
        description: "firstname"
      lastname:
        type: "string"
        description: "lastname"
      password:
        type: "string"
        description: "password"
    example:
      number: "number"
      password: "password"
      firstname: "firstname"
      lastname: "lastname"
  SetRating:
    type: "object"
    properties:
      product:
        type: "integer"
        description: "product"
      rating:
        type: "integer"
        description: "rating"
    example:
      product: "product"
      rating: "rating"
  CreateComment:
    type: "object"
    properties:
      product:
        type: "integer"
        description: "product"
      content:
        type: "string"
        description: "content"
    example:
      product: "product"
      content: "content"
responses:
  ElementNotFound:
    description: "Element not found"
  DefaultResponse:
    description: "Return object data"
